#*******************************************************************************
# Copyright (c) 2011, 2016 Eurotech and/or its affiliates and others
#
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Eclipse Public License v1.0
# which accompanies this distribution, and is available at
# http://www.eclipse.org/legal/epl-v10.html
#
# Contributors:
#     Eurotech - initial API and implementation
#
#*******************************************************************************

# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  #share the kapua directory with the vagrant machine to allow the activemq broker to access to the kapua code (jars)
  config.vm.synced_folder "../../../../", "/kapua",
     owner: "vagrant",
     group: "vagrant",
     mount_options: ["dmode=775,fmode=664"]

  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://atlas.hashicorp.com/search.
  config.vm.box = "trusty64/kapua-dev-box-0.1"

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.

  # dbms
  config.vm.network "forwarded_port", guest: 3306, host: 3306
  #activemq
  config.vm.network "forwarded_port", guest: 1883, host: 1883
  config.vm.network "forwarded_port", guest: 8883, host: 8883
  config.vm.network "forwarded_port", guest: 5005, host: 5005
  #elasticsearch
  config.vm.network "forwarded_port", guest: 9300, host: 9300
  config.vm.network "forwarded_port", guest: 9200, host: 9200
  #tomcat
  config.vm.network "forwarded_port", guest: 8080, host: 8080
  config.vm.network "forwarded_port", guest: 8443, host: 8443
  config.vm.network "forwarded_port", guest: 8000, host: 8000


  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  # config.vm.provider "virtualbox" do |vb|
  #   # Display the VirtualBox GUI when booting the machine
  #   vb.gui = true
  #
  #   # Customize the amount of memory on the VM:
  #   vb.memory = "1024"
  # end
  #
  # View the documentation for the provider you are using for more
  # information on available options.
  config.vm.provider "virtualbox" do |vb|
    # Display the VirtualBox GUI when booting the machine
    vb.gui = false
  
    # Customize the amount of memory on the VM:
    vb.memory = "2048"
  end

  # Define a Vagrant Push strategy for pushing to Atlas. Other push strategies
  # such as FTP and Heroku are also available. See the documentation at
  # https://docs.vagrantup.com/v2/push/atlas.html for more information.
  # config.push.define "atlas" do |push|
  #   push.app = "YOUR_ATLAS_USERNAME/YOUR_APPLICATION_NAME"
  # end

  # Enable provisioning with a shell script. Additional provisioners such as
  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
  # documentation for more information about their specific syntax and use.
  config.vm.provision "shell", inline: <<-SHELL
  export DEBIAN_FRONTEND=noninteractive
	 
	 export ELASTICSEARCH_VERSION="2.3.4"
	 export H2DB_VERSION="1.4.192"
	 export ACTIVEMQ_VERSION="5.14.0"
	 export TOMCAT_VERSION="8.0.37"
	 export KAPUA_VERSION="0.2.0-SNAPSHOT"
	 
	 #########################
     ### H2 database setup ###
	 #########################
     # Run the database engine
     su --login -c "java -cp /usr/local/h2database/h2database-${H2DB_VERSION}/h2*.jar org.h2.tools.Server -baseDir /home/vagrant/H2/kapua -webAllowOthers -tcpAllowOthers -tcpPort 3306 &" vagrant

	 # Create the initial database
	 java -cp /usr/local/h2database/h2database-${H2DB_VERSION}/h2*.jar org.h2.tools.Shell -url jdbc:h2:tcp://localhost:3306/kapuadb -user "root" -password "password" -sql "CREATE SCHEMA IF NOT EXISTS kapuadb; \
		CREATE USER IF NOT EXISTS kapua PASSWORD 'kapua'; \
		GRANT ALL ON SCHEMA kapuadb TO kapua;"
		
	 #########################
     ### ActiveMQ setup    ###
	 #########################
	 ### install activemq DEV PROFILE ###
     # activemq post-install setup
  	 cd /usr/local/activemq/apache-activemq-${ACTIVEMQ_VERSION}
	 rm conf/activemq.xml
	 ln -s /kapua/org.eclipse.kapua.assembly/src/main/resources/conf/broker/activemq.xml conf/activemq.xml
	 echo 'configuring conf/log4j.properties'
	 sudo sed -i 's/log4j.appender.logfile.layout.ConversionPattern=%d | %-5p | %m | %c | %t%n/log4j.appender.logfile.layout.ConversionPattern=%d | %-5p | %t | %c | %m%n/g' conf/log4j.properties
	 sudo sed -i 's/log4j.appender.audit.layout.ConversionPattern=%-5p | %m | %t%n/log4j.appender.audit.layout.ConversionPattern=%-5p | %t%n | %m/g' conf/log4j.properties

	 cp /kapua/org.eclipse.kapua.dev-tools/src/main/vagrant/develop/script/broker/*.sh .
	 chmod 555 update-kapua-jars-cfg.sh
	 chmod 555 start-broker.sh
	 # enable debug
     sudo sed -i 's/\#ACTIVEMQ_DEBUG_OPTS=/ACTIVEMQ_DEBUG_OPTS=/g' bin/env
     sudo sed -i 's/ACTIVEMQ_VERSION/'"$ACTIVEMQ_VERSION"'/g' update-kapua-jars-cfg.sh
	 sudo chown -R vagrant:vagrant /usr/local/activemq/apache-activemq-${ACTIVEMQ_VERSION}

	 ###########################
     ### tomcat post install ###
	 ###########################
     #allow remote manager application
     cd /usr/local/tomcat/apache-tomcat-${TOMCAT_VERSION}
     echo 'configuring webapps/manager/META-INF/context.xml'
     MANAGER_CONTEXT_LN=$(sudo wc -l < /usr/local/tomcat/apache-tomcat-${TOMCAT_VERSION}/webapps/manager/META-INF/context.xml) 
     TOMCAT_CONTEXT_L1='<Valve className=\"org.apache.catalina.valves.RemoteAddrValve\"'
     TOMCAT_CONTEXT_L2='allow="\\\\d+\\\\.\\\\d+\\\\.\\\\d+\\\\.\\\\d+\\|::1\\|0:0:0:0:0:0:0:1" />'
     sudo sed -i "$((MANAGER_CONTEXT_LN))i \\ \\ $TOMCAT_CONTEXT_L1" /usr/local/tomcat/apache-tomcat-${TOMCAT_VERSION}/webapps/manager/META-INF/context.xml
     sudo sed -i "$((MANAGER_CONTEXT_LN+1))i \\ \\ \\ \\ \\ \\ $TOMCAT_CONTEXT_L2" /usr/local/tomcat/apache-tomcat-${TOMCAT_VERSION}/webapps/manager/META-INF/context.xml

	 echo 'configuring conf/tomcat-users.xml'
     TOMCAT_USER_LN=$(sudo wc -l < /usr/local/tomcat/apache-tomcat-${TOMCAT_VERSION}/conf/tomcat-users.xml)
     sudo sed -i "$((TOMCAT_USER_LN))i \\ \\ <role rolename=\\"manager-gui\\"/>" /usr/local/tomcat/apache-tomcat-${TOMCAT_VERSION}/conf/tomcat-users.xml
     sudo sed -i "$((TOMCAT_USER_LN+1))i \\ \\ <role rolename=\\"manager-script\\"/>" /usr/local/tomcat/apache-tomcat-${TOMCAT_VERSION}/conf/tomcat-users.xml
     sudo sed -i "$((TOMCAT_USER_LN+2))i \\ \\ <role rolename=\\"manager-jmx\\"/>" /usr/local/tomcat/apache-tomcat-${TOMCAT_VERSION}/conf/tomcat-users.xml
     sudo sed -i "$((TOMCAT_USER_LN+3))i \\ \\ <role rolename=\\"manager-status\\"/>" /usr/local/tomcat/apache-tomcat-${TOMCAT_VERSION}/conf/tomcat-users.xml
     sudo sed -i "$((TOMCAT_USER_LN+4))i \\ \\ <user username=\\"tomcat\\" password=\\"tomcat\\" roles=\\"manager-gui,manager-script,manager-jmx,manager-status\\"/>" /usr/local/tomcat/apache-tomcat-${TOMCAT_VERSION}/conf/tomcat-users.xml

     sudo cp /kapua/org.eclipse.kapua.dev-tools/src/main/vagrant/develop/script/tomcat/start-tomcat.sh .
     sudo cp /kapua/org.eclipse.kapua.dev-tools/src/main/vagrant/develop/script/tomcat/update-kapua-war.sh .
     chmod 555 start-tomcat.sh
     chmod 555 update-kapua-war.sh
     sudo sed -i 's/KAPUA_VERSION/'"$KAPUA_VERSION"'/g' update-kapua-war.sh
     # change the owner and the group to vagrant
     sudo chown -R vagrant /usr/local/tomcat/apache-tomcat-${TOMCAT_VERSION}

  SHELL
end
